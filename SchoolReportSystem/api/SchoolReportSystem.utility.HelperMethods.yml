### YamlMime:ManagedReference
items:
- uid: SchoolReportSystem.utility.HelperMethods
  commentId: T:SchoolReportSystem.utility.HelperMethods
  id: HelperMethods
  parent: SchoolReportSystem.utility
  children:
  - SchoolReportSystem.utility.HelperMethods.CapitaliseFirstLetterOfEachWord(System.String)
  - SchoolReportSystem.utility.HelperMethods.CheckArray(System.String[],System.String)
  - SchoolReportSystem.utility.HelperMethods.DynamicSeparator(System.String,System.String)
  langs:
  - csharp
  - vb
  name: HelperMethods
  nameWithType: HelperMethods
  fullName: SchoolReportSystem.utility.HelperMethods
  type: Class
  source:
    remote:
      path: C:/Users/Yash/source/repos/SchoolReportSystem/utility/HelperMethods.cs
    id: HelperMethods
    path: utility/HelperMethods.cs
    startLine: 11
  assemblies:
  - SchoolReportSystem
  namespace: SchoolReportSystem.utility
  summary: >-
    This class contains some useful utility methods that are used by other classes in the program.


    <author>Author: Yashwant Rathor</author>
  example: []
  syntax:
    content: public static class HelperMethods
    content.vb: Public Module HelperMethods
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SchoolReportSystem.utility.HelperMethods.CapitaliseFirstLetterOfEachWord(System.String)
  commentId: M:SchoolReportSystem.utility.HelperMethods.CapitaliseFirstLetterOfEachWord(System.String)
  id: CapitaliseFirstLetterOfEachWord(System.String)
  parent: SchoolReportSystem.utility.HelperMethods
  langs:
  - csharp
  - vb
  name: CapitaliseFirstLetterOfEachWord(String)
  nameWithType: HelperMethods.CapitaliseFirstLetterOfEachWord(String)
  fullName: SchoolReportSystem.utility.HelperMethods.CapitaliseFirstLetterOfEachWord(System.String)
  type: Method
  source:
    remote:
      path: C:/Users/Yash/source/repos/SchoolReportSystem/utility/HelperMethods.cs
    id: CapitaliseFirstLetterOfEachWord
    path: utility/HelperMethods.cs
    startLine: 21
  assemblies:
  - SchoolReportSystem
  namespace: SchoolReportSystem.utility
  summary: This utility method converts all strings into capital case, with the starting letter of each word being converted to upper case.
  example: []
  syntax:
    content: public static string CapitaliseFirstLetterOfEachWord(string s)
    parameters:
    - id: s
      type: System.String
      description: The string to have the first letter of each word capitalised.
    return:
      type: System.String
      description: The string has the first letter of each word capitalised; any leading/trailing whitespaces are removed.
    content.vb: Public Shared Function CapitaliseFirstLetterOfEachWord(s As String) As String
  overload: SchoolReportSystem.utility.HelperMethods.CapitaliseFirstLetterOfEachWord*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SchoolReportSystem.utility.HelperMethods.CheckArray(System.String[],System.String)
  commentId: M:SchoolReportSystem.utility.HelperMethods.CheckArray(System.String[],System.String)
  id: CheckArray(System.String[],System.String)
  parent: SchoolReportSystem.utility.HelperMethods
  langs:
  - csharp
  - vb
  name: CheckArray(String[], String)
  nameWithType: HelperMethods.CheckArray(String[], String)
  fullName: SchoolReportSystem.utility.HelperMethods.CheckArray(System.String[], System.String)
  type: Method
  source:
    remote:
      path: C:/Users/Yash/source/repos/SchoolReportSystem/utility/HelperMethods.cs
    id: CheckArray
    path: utility/HelperMethods.cs
    startLine: 90
  assemblies:
  - SchoolReportSystem
  namespace: SchoolReportSystem.utility
  summary: This utility method checks whether an array has any elements that are null, empty or only consist of whitespaces.
  example: []
  syntax:
    content: public static void CheckArray(string[] array, string error)
    parameters:
    - id: array
      type: System.String[]
      description: The array to have each element checked.
    - id: error
      type: System.String
      description: The error message to display if an exception needs to be thrown
    content.vb: Public Shared Sub CheckArray(array As String(), error As String)
  overload: SchoolReportSystem.utility.HelperMethods.CheckArray*
  nameWithType.vb: HelperMethods.CheckArray(String(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SchoolReportSystem.utility.HelperMethods.CheckArray(System.String(), System.String)
  name.vb: CheckArray(String(), String)
- uid: SchoolReportSystem.utility.HelperMethods.DynamicSeparator(System.String,System.String)
  commentId: M:SchoolReportSystem.utility.HelperMethods.DynamicSeparator(System.String,System.String)
  id: DynamicSeparator(System.String,System.String)
  parent: SchoolReportSystem.utility.HelperMethods
  langs:
  - csharp
  - vb
  name: DynamicSeparator(String, String)
  nameWithType: HelperMethods.DynamicSeparator(String, String)
  fullName: SchoolReportSystem.utility.HelperMethods.DynamicSeparator(System.String, System.String)
  type: Method
  source:
    remote:
      path: C:/Users/Yash/source/repos/SchoolReportSystem/utility/HelperMethods.cs
    id: DynamicSeparator
    path: utility/HelperMethods.cs
    startLine: 110
  assemblies:
  - SchoolReportSystem
  namespace: SchoolReportSystem.utility
  summary: This utility method returns a pattern of characters corresponding to the length of the supplied string.
  example: []
  syntax:
    content: public static string DynamicSeparator(string s, string pattern)
    parameters:
    - id: s
      type: System.String
      description: The string which requires a pattern separator.
    - id: pattern
      type: System.String
      description: The string pattern to be produced for the dynamic seperator.
    return:
      type: System.String
      description: The dynamic seperator with the input pattern and the length equal to the input string.
    content.vb: Public Shared Function DynamicSeparator(s As String, pattern As String) As String
  overload: SchoolReportSystem.utility.HelperMethods.DynamicSeparator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SchoolReportSystem.utility
  commentId: N:SchoolReportSystem.utility
  name: SchoolReportSystem.utility
  nameWithType: SchoolReportSystem.utility
  fullName: SchoolReportSystem.utility
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SchoolReportSystem.utility.HelperMethods.CapitaliseFirstLetterOfEachWord*
  commentId: Overload:SchoolReportSystem.utility.HelperMethods.CapitaliseFirstLetterOfEachWord
  name: CapitaliseFirstLetterOfEachWord
  nameWithType: HelperMethods.CapitaliseFirstLetterOfEachWord
  fullName: SchoolReportSystem.utility.HelperMethods.CapitaliseFirstLetterOfEachWord
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SchoolReportSystem.utility.HelperMethods.CheckArray*
  commentId: Overload:SchoolReportSystem.utility.HelperMethods.CheckArray
  name: CheckArray
  nameWithType: HelperMethods.CheckArray
  fullName: SchoolReportSystem.utility.HelperMethods.CheckArray
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SchoolReportSystem.utility.HelperMethods.DynamicSeparator*
  commentId: Overload:SchoolReportSystem.utility.HelperMethods.DynamicSeparator
  name: DynamicSeparator
  nameWithType: HelperMethods.DynamicSeparator
  fullName: SchoolReportSystem.utility.HelperMethods.DynamicSeparator
