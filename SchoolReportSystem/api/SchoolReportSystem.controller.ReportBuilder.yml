### YamlMime:ManagedReference
items:
- uid: SchoolReportSystem.controller.ReportBuilder
  commentId: T:SchoolReportSystem.controller.ReportBuilder
  id: ReportBuilder
  parent: SchoolReportSystem.controller
  children:
  - SchoolReportSystem.controller.ReportBuilder.#ctor
  - SchoolReportSystem.controller.ReportBuilder.GenerateReports
  langs:
  - csharp
  - vb
  name: ReportBuilder
  nameWithType: ReportBuilder
  fullName: SchoolReportSystem.controller.ReportBuilder
  type: Class
  source:
    remote:
      path: C:/Users/Yash/source/repos/SchoolReportSystem/controller/ReportBuilder.cs
    id: ReportBuilder
    path: controller/ReportBuilder.cs
    startLine: 15
  assemblies:
  - SchoolReportSystem
  namespace: SchoolReportSystem.controller
  summary: >-
    This class is responsible for creating instances of the <code>School</code>, <code>DataClass</code>, <code>ImportData</code> and <code>ExportData</code> classes.


    <author>Author: Yashwant Rathor</author>
  example: []
  syntax:
    content: public class ReportBuilder
    content.vb: Public Class ReportBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SchoolReportSystem.controller.ReportBuilder.#ctor
  commentId: M:SchoolReportSystem.controller.ReportBuilder.#ctor
  id: '#ctor'
  parent: SchoolReportSystem.controller.ReportBuilder
  langs:
  - csharp
  - vb
  name: ReportBuilder()
  nameWithType: ReportBuilder.ReportBuilder()
  fullName: SchoolReportSystem.controller.ReportBuilder.ReportBuilder()
  type: Constructor
  source:
    remote:
      path: C:/Users/Yash/source/repos/SchoolReportSystem/controller/ReportBuilder.cs
    id: .ctor
    path: controller/ReportBuilder.cs
    startLine: 27
  assemblies:
  - SchoolReportSystem
  namespace: SchoolReportSystem.controller
  summary: The default constructor responsible for creating a ReportBuilder object.
  example: []
  syntax:
    content: public ReportBuilder()
    content.vb: Public Sub New
  overload: SchoolReportSystem.controller.ReportBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SchoolReportSystem.controller.ReportBuilder.GenerateReports
  commentId: M:SchoolReportSystem.controller.ReportBuilder.GenerateReports
  id: GenerateReports
  parent: SchoolReportSystem.controller.ReportBuilder
  langs:
  - csharp
  - vb
  name: GenerateReports()
  nameWithType: ReportBuilder.GenerateReports()
  fullName: SchoolReportSystem.controller.ReportBuilder.GenerateReports()
  type: Method
  source:
    remote:
      path: C:/Users/Yash/source/repos/SchoolReportSystem/controller/ReportBuilder.cs
    id: GenerateReports
    path: controller/ReportBuilder.cs
    startLine: 39
  assemblies:
  - SchoolReportSystem
  namespace: SchoolReportSystem.controller
  summary: This method effectively executes both import/export main methods for the system.
  example: []
  syntax:
    content: public void GenerateReports()
    content.vb: Public Sub GenerateReports
  overload: SchoolReportSystem.controller.ReportBuilder.GenerateReports*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SchoolReportSystem.controller
  commentId: N:SchoolReportSystem.controller
  name: SchoolReportSystem.controller
  nameWithType: SchoolReportSystem.controller
  fullName: SchoolReportSystem.controller
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SchoolReportSystem.controller.ReportBuilder.#ctor*
  commentId: Overload:SchoolReportSystem.controller.ReportBuilder.#ctor
  name: ReportBuilder
  nameWithType: ReportBuilder.ReportBuilder
  fullName: SchoolReportSystem.controller.ReportBuilder.ReportBuilder
- uid: SchoolReportSystem.controller.ReportBuilder.GenerateReports*
  commentId: Overload:SchoolReportSystem.controller.ReportBuilder.GenerateReports
  name: GenerateReports
  nameWithType: ReportBuilder.GenerateReports
  fullName: SchoolReportSystem.controller.ReportBuilder.GenerateReports
